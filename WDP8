#include <iostream>
#include <vector>
using namespace std;
void wypisz(vector<int>tab) {
    for (int i = 0; i < tab.size(); i++) {
        cout << tab[i] << ".";
    }
}
int max(vector<int>tab) {
    int maks = tab[0];
    for (int i = 0; i < tab.size(); i++) {
        if (tab[i] > maks) {
            maks = tab[i];
        }
    }
    return maks;
}
bool czynalezy(vector<int>tab,int element) {
    for (int i = 0; i < tab.size(); i++) {
        if (element == tab[i]) {
            return true;
        }
    }
    return false;
}
bool czyzawiera(vector<int>tab1,vector<int>tab2) {
    for (int i = 0; i < tab2.size(); i++) {
        if (!czynalezy(tab1, tab2[i])) {
            return false;
        }
    }
    return true;
}
vector<int>unikalne(vector<int>tab) {
    vector<int>wynik;
    for (int i = 0; i < tab.size(); i++) {
        if (!czynalezy(wynik, tab[i])) {
            wynik.push_back(tab[i]);
        }
    }
    return wynik;
}
int suma(vector<int>tab) {
    int wynik = 0;
    for (int i = 0; i < tab.size(); i++) {
        wynik += tab[i];
    }
    return wynik;
}
double srednia(vector<int>tab) {
    double wynik = suma(tab);
        return wynik/tab.size();
}

vector<int>podzielne4(vector<int>tab) {
    vector<int>wynik;
    for (int i = 0; i < tab.size(); i++) {
        if (tab[i] % 4 == 0) {
            wynik.push_back(tab[i]);
        }
    }
    return wynik;
}
int main()
{
    vector<int>tab{ 2,1,3,7,8,12,16,2};
    vector<int>tab1{ 2,1,3,7,8,9 };
    vector<int>tab2{ 1,3,2 };
    int element = 3;
    wypisz(tab);
    cout << endl << max(tab);
    cout << endl << czynalezy(tab, element);
    cout << endl << czyzawiera(tab1, tab2) << endl;
    wypisz(unikalne(tab));
    cout << endl << suma(tab);
    cout << endl << srednia(tab) << endl;
    wypisz(podzielne4(tab));
}
//kroki w celu napisania programu
// 0. zrozumieć o co chodzi w zadaniu
// 1. wymyśl przykład do zadania
// 2. sprawdź czy przykład jest kompletny
// 3. sformalizowanie przykładów
// 4. nagłowek funkcji {typ danych nazwa(parametry)}
// 5. ciało funkcji -> "algorytm", deklarujemy zmienną która będzie wynikiem
// 6. nie wiesz co pisać? wróć do przykładu

// zad1:: zbior liczb i podac sume liczb tego zbioru
//1. 2 , 1, 3, 7, 3
//2. jest kompletny
//3. vector<int>tab{2,1,3,7,3}
//4. int suma(v<int>tab)
//5. int wynik=0;  petla for po wekotrze , dodac do sumy tab[i] , zwrocic wynik return wynik.

//zad 2:: policz srednia arytmetyczna z wektora

//zad 3:: funkcja ma za zadanie zwrocic wszystkie liczby ze zbioru podzielne przez 4
