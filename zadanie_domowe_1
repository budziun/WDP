//do domu

#include <iostream>
#include <vector>
#include <map>
#include <iostream>
#include <fstream>
#include <string>
using namespace std;
void wypisz(vector<int>tab) {
    int i = 0;
    while (i < tab.size()) {
        cout << tab[i] << ".";
        i++;
    }
}
int max(vector<int>tab) {
    int wynik = tab[0];
    int i = 0;
    while (i < tab.size()) {
        if (tab[i] > wynik) {
            wynik = tab[i];
        }
        i++;
    }
    return wynik;
}
bool czynalezy(vector<int>tab, int element) {
    int i = 0;
    while (i < tab.size()) {
        if (element == tab[i]) {
            return true;
        }
        i++;
    }
    return false;
}
bool czyzawiera(vector<int>tab1, vector<int>tab2) {
    int i = 0;
    while (i < tab2.size()) {
        if (!czynalezy(tab1, tab2[i])) {
            return false;
        }
        i++;
    }
    return true;
}
vector<int>unikalne(vector<int>tab) {
    vector<int>wynik;
    int i = 0;
    while (i < tab.size()) {
        if (!czynalezy(wynik, tab[i])) {
            wynik.push_back(tab[i]);
        }
        i++;
    }
    return wynik;
}
int suma(vector<int>tab) {
    int wynik = 0;
    int i = 0;
    while (i < tab.size()) {
        wynik += tab[i];
        i++;
    }
    return wynik;
}
double avg(vector<int>tab) {
    double wynik = suma(tab);
    return wynik / tab.size();
}
vector<int>podzielne(vector<int>tab, int dzielnik, int reszta = 0) {
    vector<int>wynik;
    int i = 0;
    while (i < tab.size()) {
        if (tab[i] % dzielnik == reszta) {
            wynik.push_back(tab[i]);
        }
        i++;
    }
    return wynik;
}
int main()
{
    vector<int>tab{ 2,1,3,7,7,8 };
    vector<int>tab1{ 2,1,3,7 };
    vector<int>tab2{ 1,3,2 };
    int element = 3;
    wypisz(tab);
    cout << endl << max(tab);
    cout << endl << czynalezy(tab, element);
    cout << endl << czyzawiera(tab1, tab2) << endl;
    wypisz(unikalne(tab));
    cout << endl << suma(tab);
    cout << endl << avg(tab) << endl;
    wypisz(podzielne(tab, 4));

    map<int, int>m;
    m.insert({ 1,5 });
    m.insert({ -200000,2 });
    cout << endl << m[-200000];
    m[-200000] = 8;
    for (auto& el : m) {
        cout << endl << el.first << ":";
        cout << endl << el.second << ",";
    }
        //zapisywanie do pliku 
        ofstream MyFile("test.txt");
        MyFile << "Linia tekstu";
        MyFile.close();
        // odczytywanie z pliku
        string tekstzpliku;
        ifstream MyReadFile("test.txt");
        while (getline(MyReadFile, tekstzpliku)) {
            cout << endl << tekstzpliku;
        }
        MyReadFile.close();
}
//kroki do napisania progarmu
//0. zapoznac sie o co chodzi w zadaniu
//1. wymyslic przyklad do zadania
//2. sprawdzic czy przyklad jest kompletny
//3. sformalizowanie przykladu
//4. okreslic typ danych funkcji, wymyslec nazwe oraz podanie parametrow funkcji
//5. napisac cialo funkcji czyli algorytm, zadeklarowac typ zwracanej wartosci przez funkcje
//6. nie wiesz co robic dalej? wróć do przykładu
